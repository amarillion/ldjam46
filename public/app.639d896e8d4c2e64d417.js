!function(t){function e(e){for(var i,a,n=e[0],h=e[1],c=e[2],l=0,p=[];l<n.length;l++)a=n[l],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(i in h)Object.prototype.hasOwnProperty.call(h,i)&&(t[i]=h[i]);for(d&&d(e);p.length;)p.shift()();return r.push.apply(r,c||[]),s()}function s(){for(var t,e=0;e<r.length;e++){for(var s=r[e],i=!0,n=1;n<s.length;n++){var h=s[n];0!==o[h]&&(i=!1)}i&&(r.splice(e--,1),t=a(a.s=s[0]))}return t}var i={},o={0:0},r=[];function a(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=t,a.c=i,a.d=function(t,e,s){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(s,i,function(e){return t[e]}.bind(null,i));return s},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="";var n=window.webpackJsonp=window.webpackJsonp||[],h=n.push.bind(n);n.push=e,n=n.slice();for(var c=0;c<n.length;c++)e(n[c]);var d=h;r.push([1468,1]),s()}({1468:function(t,e,s){"use strict";s.r(e);var i=s(10),o=s.n(i),r=s(550),a=s.n(r),n=class extends o.a.Scene{constructor(){super({key:"BootScene"})}preload(){this.fontsReady=!1,this.fontsLoaded=this.fontsLoaded.bind(this),this.add.text(100,100,"loading fonts..."),this.load.image("loaderBg","./assets/images/loader-bg.png"),this.load.image("loaderBar","./assets/images/loader-bar.png"),a.a.load({google:{families:["Bangers"]},active:this.fontsLoaded})}update(){this.fontsReady&&this.scene.start("SplashScene")}fontsLoaded(){this.fontsReady=!0}},h=class extends o.a.Scene{constructor(){super({key:"SplashScene"})}preload(){this.load.image("mushroom","assets/images/mushroom2.png")}create(){this.scene.start("GameScene")}update(){}};function c(t){return Math.floor(Math.random()*Math.floor(t))}const d=0,l=1,p=2,u=0,m=2,g=3,f=[{name:"unnamed_algae_0",role:l,interactionMap:{5:m,6:g},biotopeTolerances:{0:1,1:.5,2:.5,3:.5,4:.5,5:.5,6:.1,7:.5},optimalTemperature:200,backstory:null,profilePictureKey:null,tileIndex:null,color:16776960},{name:"unnamed_herbivore_1",role:p,interactionMap:{0:u,3:u},biotopeTolerances:{0:1,1:1,2:.5,3:.5,4:.1,5:.5,6:.5,7:.5},optimalTemperature:200,backstory:null,profilePictureKey:null,tileIndex:null,color:16711935},{name:"unnamed_fungus_2",role:d,interactionMap:{3:g},biotopeTolerances:{0:.5,1:1,2:.5,3:.1,4:.5,5:.5,6:.5,7:.5},optimalTemperature:200,backstory:null,profilePictureKey:null,tileIndex:null,color:65535},{name:"unnamed_algae_3",role:l,interactionMap:{5:m,6:g},biotopeTolerances:{0:1,1:.5,2:.5,3:.5,4:.5,5:.5,6:.1,7:.5},optimalTemperature:200,backstory:null,profilePictureKey:null,tileIndex:null,color:16711680}];class y extends Error{constructor(t){super(t)}}function b(t,e){if(!t)throw console.error(e),new y(e)}class x{constructor(t,e,s){this.x=t,this.y=e,this.deadBiomass=10,this.co2=1e3,this.o2=10,this.h2o=1e3,this.latitude=s,this.heat=220,this.stellarEnergy=3.5*Math.cos(this.latitude/180*3.141),b(this.stellarEnergy>=0),this._species=[]}sumLivingBiomass(){return this._species.reduce((t,e)=>t+e.biomass,0)}get species(){return this._species}addSpecies(t,e){const s=this._species.find(e=>e.speciesId===t);s?(s.biomass+=e,this.sortSpecies()):(this._species.push({speciesId:t,biomass:e}),this.maxSpeciesCheck())}maxSpeciesCheck(){if(this.sortSpecies(),this._species.length>8){const t=this._species.pop();this.deadBiomass+=t.biomass}}sortSpecies(){this._species.sort((t,e)=>e.biomass-t.biomass)}speciesToString(){return this._species.map(t=>`${t.speciesId}: ${t.biomass.toFixed(1)} `).join()}toString(){return`[${this.x}, ${this.y}] \nHeat: ${this.heat.toExponential(2)} GJ/km^2\nTemperature: ${this.temperature.toFixed(0)} K\nHeat gain from sun: ${this.stellarEnergy.toExponential(2)} GJ/km^2/tick\nHeat loss to space: ${this.heatLoss.toExponential(2)} GJ/km^2/tick\nLatitude: ${this.latitude.toFixed(0)} deg\n\nCO2: ${this.co2.toFixed(1)}\nH2O: ${this.h2o.toFixed(1)}\nO2: ${this.o2.toFixed(1)}\nOrganic: ${this.deadBiomass.toFixed(1)}\n\nSpecies: ${this.speciesToString()}`}growAndDie(){for(const t of this._species){const e=f[t.speciesId];if(e.role===l){const e=Math.min(this.co2,this.h2o),s=3e-5*this.stellarEnergy*e,i=Math.min(t.biomass*s,this.co2,this.o2);b(i>=0),this.co2-=i,this.h2o-=i,this.o2+=i,t.biomass+=i,b(t.biomass>=0)}else if(e.role===p)for(const s of this._species){if(s.speciesId===t.speciesId)continue;if(e.interactionMap[s.speciesId]===u){const e=.001*s.biomass,i=Math.min(t.biomass*e,s.biomass);b(i>=0),s.biomass-=i,t.biomass+=i,b(t.biomass>=0),b(s.biomass>=0)}}else if(e.role===d){const e=.001*this.deadBiomass,s=Math.min(t.biomass*e,this.deadBiomass);b(s>=0),this.deadBiomass-=s,t.biomass+=s,b(this.deadBiomass>=0),b(t.biomass>=0)}if(e.role!==l){const e=.001*Math.min(t.biomass,this.o2),s=Math.min(t.biomass,t.biomass*e,this.o2);b(s>=0),this.o2-=s,t.biomass-=s,this.h2o+=s,this.co2+=s,b(this.deadBiomass>=0),b(t.biomass>=0)}const s=1;{b(t.biomass>=0,`Wrong value ${t.biomass} ${t.speciesId}`);const e=.01/s,i=Math.min(t.biomass*e,t.biomass);b(i>=0),this.deadBiomass+=i,t.biomass-=i,b(t.biomass>=0)}b(t.biomass>=0)}b(this.o2>=0),b(this.co2>=0),b(this.h2o>=0),b(this.deadBiomass>=0),this.sortSpecies()}migrateTo(t){if(0!==this._species.length)for(const e of this._species){const s=.01*e.biomass;t.addSpecies(e.speciesId,s),e.biomass-=s}}diffuseProperty(t,e,s){const i=this[e]*s-t[e]*s;this[e]-=i,t[e]+=i,b(this[e]>=0),b(t[e]>=0)}diffusionTo(t){{const e=this.temperature<216?.01:.1;this.diffuseProperty(t,"co2",e)}{const e=this.temperature<273?.01:.1;this.diffuseProperty(t,"h2o",e)}{const e=.1;this.diffuseProperty(t,"o2",e)}{const e=.1;this.diffuseProperty(t,"heat",e)}}updatePhysicalProperties(){this.temperature=this.heat/1,this.heat+=this.stellarEnergy;this.heatLoss=.01*this.heat,this.heat-=this.heatLoss}updateStats(t){t.co2+=this.co2,t.o2+=this.o2,t.h2o+=this.h2o,t.deadBiomass+=this.deadBiomass;for(const{speciesId:e,biomass:s}of this._species)e in t.species||(t.species[e]=0),t.species[e]+=s}}class w{constructor(t,e,s=(t=>(e,s)=>new x(e,s,160*s/(t-1)-80))(e)){this.cellFactory=s,this.width=t,this.height=e,this._prepareGrid()}_prepareGrid(){this._data=new Array(this.width*this.height);for(let t=0;t<this.width;++t)for(let e=0;e<this.height;++e)this._data[this._index(t,e)]=this.cellFactory(t,e)}randomCell(){let t=c(this._data.length);return this._data[t]}_index(t,e){return t+e*this.width}get(t,e){return this.inRange(t,e)?this._data[this._index(t,e)]:null}inRange(t,e){return t>=0&&e>=0&&t<this.width&&e<this.height}*eachNode(){for(const t of this._data)t&&(yield t)}*eachNodeCheckered(){b(this._data.length%523!=0);let t=0;for(let e=0;e<this._data.length;++e){t=(t+523)%this._data.length;const e=this._data[t];yield e}}*getAdjacent(t){let e=0,s=-1;const i=t.x,o=t.y;for(const t of[1,2,4,8]){const r=(i+e+this.width)%this.width,a=o+s;if(a>=0&&a<this.height){const e=this._data[this._index(r,a)];yield[t,e]}[e,s]=[-s,e]}}}class k{constructor(){this.reset()}reset(){this.temperature=0,this.co2=0,this.o2=0,this.h2o=0,this.deadBiomass=0,this.species={}}speciesToString(){return Object.entries(this.species).map((t,e)=>`${t}: ${e.toFixed(1)} `).join()}toString(){return`Average Temperature: ${this.temperature.toFixed(0)} K\n\nCO2: ${this.co2.toFixed(1)}\nH2O: ${this.h2o.toFixed(1)}\nO2: ${this.o2.toFixed(1)}\nOrganic: ${this.deadBiomass.toFixed(1)}\n\nSpecies: ${this.speciesToString()}`}}let S=0;class _{constructor(){this.id=S++,this.dna="",this.calculateProperties()}calculateProperties(){}}class P{constructor(){this.grid=new w(20,10),this.species={},this.planet=new k,this.init(),this.tickCounter=0}init(){for(let t=0;t<4;++t){const t=this.createSpecies();for(let e=0;e<5;++e){this.grid.randomCell().addSpecies(t.id,100)}}}createSpecies(){const t=new _;return this.species[t.id]=t,t}tick(){this.updatePhysicalProperties(),this.growAndDie(),this.interact(),this.evolve(),this.migrate(),this.updatePlanet(),this.tickCounter+=1}updatePhysicalProperties(){for(const t of this.grid.eachNode())t.updatePhysicalProperties();for(const t of this.grid.eachNodeCheckered())for(const[,e]of this.grid.getAdjacent(t))t.diffusionTo(e)}growAndDie(){for(const t of this.grid.eachNode())t.growAndDie()}interact(){}evolve(){}migrate(){for(const t of this.grid.eachNodeCheckered())for(const[,e]of this.grid.getAdjacent(t))t.migrateTo(e)}updatePlanet(){this.planet.reset();let t=0,e=0;for(const s of this.grid.eachNode())e+=s.temperature,t++,s.updateStats(this.planet);this.planet.temperature=e/t}}class C extends o.a.GameObjects.Graphics{constructor(t,e,s){super(t,s),this.grid=e,this.prop=()=>1,this.autoMin=!1,this.fixedMin=0,this.color=16711680,this.update()}setProp(t,e=!1){this.prop=t,this.autoMin=e}minMax(t){let e=1/0,s=-1/0;for(const i of this.grid.eachNode()){const o=t(i);o<e&&(e=o),o>s&&(s=o)}return{min:e,max:s}}update(){function t(t,e,s){const i=s-e;return i?(t-e)/i:0}this.clear();const e=this.prop;let{min:s,max:i}=this.minMax(e);this.autoMin||(s=this.fixedMin);for(const o of this.grid.eachNode()){const r=64*o.x,a=64*o.y,n=t(e(o),s,i);this.fillStyle(this.color,n),this.fillRect(r,a,63,63)}}}class M extends o.a.GameObjects.Graphics{constructor(t,e,s){super(t,s),this.grid=e,this.prop=()=>1,this.update()}update(){this.clear();for(const t of this.grid.eachNode()){const e=64*t.x+32,s=64*t.y+32;let i=-16,o=16;for(const{speciesId:r,biomass:a}of t.species.slice(0,4)){if(a<50)continue;const t=f[r].color;this.fillStyle(t,1),this.fillCircle(e+i,s+o,16),[i,o]=[-o,i]}}}}class v extends o.a.GameObjects.Graphics{constructor(t,e){super(t,e),this.mx=0,this.my=0,this.visible=!1,this.update()}setCoord(t,e){this.mx=t,this.my=e,this.visible=!0,this.update()}update(){this.clear();const t=64*this.mx,e=64*this.my;this.lineStyle(1,16777215,1),this.strokeRect(t-1,e-1,66,66)}}var I=class extends o.a.Scene{constructor(){super({key:"GameScene"})}init(){console.log("Game.init called"),this.sim=new P,this.time.addEvent({delay:500,callback:()=>this.tickAndLog(),loop:!0}),this.currentCell=this.sim.grid.get(0,0)}preload(){}create(){console.log("Game.create called"),this.logElement=document.getElementById("log"),this.planetElement=document.getElementById("planet"),this.gridView=new C(this,this.sim.grid),this.speciesView=new M(this,this.sim.grid),this.cursor=new v(this),this.add.existing(this.gridView),this.add.existing(this.speciesView),this.add.existing(this.cursor),this.input.on("pointermove",this.onMouseMove,this),this.input.on("pointerup",this.onMouseClick,this),this.input.keyboard.on("keydown",this.onKeyDown,this),this.setFilter(1);var t=this.input.keyboard.createCursorKeys(),e={camera:this.cameras.main,left:t.left,right:t.right,up:t.up,down:t.down,zoomIn:this.input.keyboard.addKey(o.a.Input.Keyboard.KeyCodes.Q),zoomOut:this.input.keyboard.addKey(o.a.Input.Keyboard.KeyCodes.E),acceleration:.06,drag:5e-4,maxSpeed:1};this.controls=new o.a.Cameras.Controls.SmoothedKeyControl(e),this.add.text(0,0,"Exo Keeper",{font:"32px Bangers",fill:"#7744ff"})}tickAndLog(){this.sim.tick(),this.gridView.update(),this.speciesView.update(),this.logElement.innerText=this.currentCell.toString(),this.planetElement.innerText=`Tick: ${this.sim.tickCounter}\n${this.sim.planet}`}update(t,e){this.controls.update(e)}toGridCoords({x:t,y:e}){let s=this.cameras.main.getWorldPoint(t,e);return{mx:Math.floor(s.x/64),my:Math.floor(s.y/64)}}onMouseClick(t){const{mx:e,my:s}=this.toGridCoords(t),i=this.sim.grid.get(e,s);i&&(this.currentCell=i)}onMouseMove(t){const{mx:e,my:s}=this.toGridCoords(t);this.sim.grid.inRange(e,s)&&this.cursor.setCoord(e,s)}onKeyDown(t){switch(t.keyCode){case o.a.Input.Keyboard.KeyCodes.ONE:this.setFilter(1),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.TWO:this.setFilter(2),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.THREE:this.setFilter(3),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.FOUR:this.setFilter(4),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.FIVE:this.setFilter(5),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.SIX:this.setFilter(6),t.stopPropagation()}}setFilter(t){switch(t){case 1:this.gridView.setProp(t=>t.sumLivingBiomass()),this.gridView.color=8978312;break;case 2:this.gridView.color=65280,this.gridView.setProp(t=>t.co2);break;case 3:this.gridView.color=16746632,this.gridView.setProp(t=>t.o2);break;case 4:this.gridView.color=255,this.gridView.setProp(t=>t.h2o);break;case 5:this.gridView.color=16776960,this.gridView.setProp(t=>t.heat,!0);break;case 6:this.gridView.color=16746496,this.gridView.setProp(t=>t.stellarEnergy)}}},K={type:o.a.AUTO,parent:"content",localStorageName:"exokeeper",disableContextMenu:!0,fps:{target:20},scale:{mode:o.a.Scale.RESIZE}};const O=Object.assign(K,{scene:[n,h,I]});class T extends o.a.Game{constructor(){super(O)}}window.game=new T}});