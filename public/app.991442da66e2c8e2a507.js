!function(e){function t(t){for(var i,a,r=t[0],c=t[1],h=t[2],d=0,p=[];d<r.length;d++)a=r[d],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(e[i]=c[i]);for(l&&l(t);p.length;)p.shift()();return n.push.apply(n,h||[]),s()}function s(){for(var e,t=0;t<n.length;t++){for(var s=n[t],i=!0,r=1;r<s.length;r++){var c=s[r];0!==o[c]&&(i=!1)}i&&(n.splice(t--,1),e=a(a.s=s[0]))}return e}var i={},o={0:0},n=[];function a(t){if(i[t])return i[t].exports;var s=i[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=i,a.d=function(e,t,s){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(s,i,function(t){return e[t]}.bind(null,i));return s},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=t,r=r.slice();for(var h=0;h<r.length;h++)t(r[h]);var l=c;n.push([1470,1]),s()}({1468:function(e,t){class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set text(e){this.shadowRoot.innerHTML=`\n\t<style>\n\t\tpre {\n\t\t\toverflow: hidden;\n\t\t}\n\t</style>\n\n\t<pre>${e}</pre>\n`}}customElements.define("exo-planet-window",s)},1469:function(e,t){class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set text(e){this.shadowRoot.innerHTML=`\n\t<style>\n\t\tpre {\n\t\t\toverflow: hidden;\n\t\t}\n\t</style>\n\n\t<pre>${e}</pre>\n`}}customElements.define("exo-detail-window",s)},1470:function(e,t,s){"use strict";s.r(t);var i=s(14),o=s.n(i),n=s(550),a=s.n(n),r=class extends o.a.Scene{constructor(){super({key:"BootScene"})}preload(){this.fontsReady=!1,this.fontsLoaded=this.fontsLoaded.bind(this),this.add.text(100,100,"loading fonts..."),this.load.image("loaderBg","./assets/images/loader-bg.png"),this.load.image("loaderBar","./assets/images/loader-bar.png"),this.load.image("biotopeTiles","./assets/images/biotope.png"),this.load.tilemapTiledJSON("planetScape","./assets/planetscape.json"),this.load.image("speciesTiles","./assets/images/species.png"),this.load.tilemapTiledJSON("speciesMap","./assets/speciesmap.json"),a.a.load({google:{families:["Bangers"]},active:this.fontsLoaded})}update(){this.fontsReady&&this.scene.start("SplashScene")}fontsLoaded(){this.fontsReady=!0}},c=class extends o.a.Scene{constructor(){super({key:"SplashScene"})}preload(){this.load.image("mushroom","assets/images/mushroom2.png")}create(){this.scene.start("GameScene")}update(){}};function h(e){return Math.floor(Math.random()*Math.floor(e))}const l=0,d=1,p=2,m=0,u=[{name:"Plant 0",iconUrl:"./assets/images/species/plant0.png",tileIdx:12,color:6942894,role:d,interactionMap:{},albedo:.9,temperatureRange:[220,260],backstory:"Early plant\nLorem ipsum...",biotopeTolerances:{0:.1,1:.5,2:.5,3:.5,4:.5,5:1,6:.5,7:.5}},{name:"Plant 1",iconUrl:"./assets/images/species/plant1.png",tileIdx:4,color:3706428,role:d,interactionMap:{},albedo:.8,temperatureRange:[230,270],backstory:"Early plant\nLorem ipsum...",biotopeTolerances:{0:.5,1:.1,2:.5,3:1,4:.5,5:.5,6:.5,7:.5}},{name:"Herbivore 0",iconUrl:"./assets/images/species/herbivore0.png",tileIdx:11,color:16301008,role:p,interactionMap:{0:m,1:m,7:m,8:m},albedo:.9,temperatureRange:[235,265],backstory:"\nEarly herbivore\nLorem ipsum...",biotopeTolerances:{0:1,1:.5,2:.5,3:.5,4:.5,5:.1,6:.1,7:.5}},{name:"Fungus 1",iconUrl:"./assets/images/species/fungi1.png",tileIdx:13,color:9268835,role:l,interactionMap:{},albedo:.8,temperatureRange:[240,270],backstory:"\nEarly fungus. Needs a little bit of temperature \nLorem ipsum...",biotopeTolerances:{0:.5,1:.5,2:1,3:.5,4:1,5:.1,6:.1,7:.5}},{name:"Microbe 1",iconUrl:"./assets/images/species/microb1.png",tileIdx:1,color:16776960,role:p,interactionMap:{0:m,1:m,7:m,8:m},albedo:.7,temperatureRange:[245,290],backstory:"\nMid-game herbivore",biotopeTolerances:{0:.1,1:1,2:.5,3:.5,4:.5,5:.5,6:.5,7:.5}},{name:"Microbe 2",iconUrl:"./assets/images/species/microb2.png",tileIdx:3,color:9215743,role:l,interactionMap:{},albedo:.6,temperatureRange:[250,290],backstory:"\nMid-game fungus\n",biotopeTolerances:{0:.5,1:.1,2:.1,3:.9,4:.9,5:.5,6:.5,7:.5}},{name:"Catcrobe 2",iconUrl:"./assets/images/species/catcrobe2.png",tileIdx:9,color:12216520,role:p,interactionMap:{2:m,3:m,4:m,5:m,9:m,10:m,11:m},albedo:.6,temperatureRange:[255,300],backstory:"\nEarly carnivore\n",biotopeTolerances:{0:.5,1:.1,2:.1,3:.5,4:.9,5:.9,6:.5,7:.5}},{name:"Plant 2",iconUrl:"./assets/images/species/microb4.png",tileIdx:6,color:1638399,role:d,interactionMap:{},albedo:.6,temperatureRange:[260,290],backstory:"Mid-game plant\n",biotopeTolerances:{0:.5,1:.1,2:.5,3:.9,4:.5,5:.5,6:.5,7:.5}},{name:"Plant 3",iconUrl:"./assets/images/species/microb5.png",tileIdx:7,color:7798531,role:d,interactionMap:{},albedo:.5,temperatureRange:[270,310],backstory:"Late plant\nRelatively poor albedo reduction compared to other late-game species - you'll need cooperation of other microbes",biotopeTolerances:{0:.5,1:.5,2:.5,3:.5,4:.1,5:.9,6:.5,7:.5}},{name:"Microbe 3",iconUrl:"./assets/images/species/microb3.png",tileIdx:8,color:12312315,role:p,interactionMap:{0:m,1:m,7:m,8:m},albedo:.3,temperatureRange:[270,310],backstory:"Late herbivore\n",biotopeTolerances:{0:.1,1:.1,2:1,3:.5,4:.5,5:.9,6:.9,7:.5}},{name:"Donut 1",iconUrl:"./assets/images/species/donut1.png",tileIdx:5,color:16748288,role:l,interactionMap:{},albedo:.2,temperatureRange:[270,310],backstory:"Late fungus\nExcellent for albedo effect!\nLorem ipsum...",biotopeTolerances:{0:.2,1:.5,2:.5,3:.5,4:.8,5:.5,6:.5,7:.5}},{name:"Angry 1",iconUrl:"./assets/images/species/angry1.png",tileIdx:10,color:16727296,role:p,interactionMap:{2:m,3:m,4:m,5:m,6:m,9:m,10:m},albedo:.1,temperatureRange:[280,320],backstory:"Late carnivore\nExcellent for albedo effect!\nLorem ipsum...",biotopeTolerances:{0:.1,1:.1,2:.2,3:1,4:.8,5:.9,6:.9,7:.1}}];class g extends Error{constructor(e){super(e)}}function b(e,t){if(!e)throw console.error(t),new g(t)}class f{constructor(e,t,s){this.x=e,this.y=t,this.deadBiomass=0,this.co2=1e3,this.o2=0,this.h2o=1e3,this.latitude=s,this.heat=220,this.stellarEnergy=10*Math.cos(this.latitude/180*3.141),b(this.stellarEnergy>=0),this._species=[]}sumLivingBiomass(){return this._species.reduce((e,t)=>e+t.biomass,0)}get species(){return this._species}addSpecies(e,t){const s=this._species.find(t=>t.speciesId===e);s?(s.biomass+=t,this.sortSpecies()):(this._species.push({speciesId:e,biomass:t}),this.maxSpeciesCheck())}maxSpeciesCheck(){this.sortSpecies(),this._species.length>8&&this.removeLowestSpecies()}removeLowestSpecies(){const e=this._species.pop();this.deadBiomass+=e.biomass}pinkElephantCheck(){if(this.sortSpecies(),0===this._species.length)return;this._species[this._species.length-1].biomass<1&&this.removeLowestSpecies()}sortSpecies(){this._species.sort((e,t)=>t.biomass-e.biomass)}speciesToString(){return this._species.map(e=>`${e.speciesId}: ${e.biomass.toFixed(1)}`).join("\n  ")}toString(){return`[${this.x}, ${this.y}] Biotope: ${this.biotope}\nHeat: ${this.heat.toExponential(2)} GJ/km^2\nTemperature: ${this.temperature.toFixed(0)} K\nHeat gain from sun: ${this.stellarEnergy.toExponential(2)} GJ/km^2/tick\nHeat loss to space: ${this.heatLoss.toExponential(2)} GJ/km^2/tick\nAlbedo: ${this.albedo.toFixed(2)}\n${this.albedoDebugStr}\nLatitude: ${this.latitude.toFixed(0)} deg\n\nCO2: ${this.co2.toFixed(1)}\nH2O: ${this.h2o.toFixed(1)}\nO2: ${this.o2.toFixed(1)}\nOrganic: ${this.deadBiomass.toFixed(1)}\n\nSpecies: ${this.speciesToString()}`}growAndDie(){for(const e of this._species){const t=u[e.speciesId];let s=1;if(b(this.biotope in t.biotopeTolerances),s*=t.biotopeTolerances[this.biotope],(this.temperature<t.temperatureRange[0]||this.temperature>t.temperatureRange[1])&&(s*=.1),b(s>=0&&s<=1),t.role===d){const t=Math.min(this.co2,this.h2o),i=s*this.temperature*this.stellarEnergy*15e-8*t,o=Math.min(e.biomass*i,this.co2,this.h2o);b(o>=0),this.co2-=o,this.h2o-=o,this.o2+=o,e.biomass+=o,b(e.biomass>=0)}else if(t.role===p)for(const i of this._species){if(i.speciesId===e.speciesId)continue;if(t.interactionMap[i.speciesId]===m){const t=.001*s*i.biomass,o=Math.min(e.biomass*t,i.biomass);b(o>=0),i.biomass-=o,e.biomass+=o,b(e.biomass>=0),b(i.biomass>=0)}}else if(t.role===l){const t=.001*s*this.deadBiomass,i=Math.min(e.biomass*t,this.deadBiomass);b(i>=0),this.deadBiomass-=i,e.biomass+=i,b(this.deadBiomass>=0),b(e.biomass>=0)}if(t.role!==d){const t=.001*Math.min(e.biomass,this.o2),s=Math.min(e.biomass,e.biomass*t,this.o2);b(s>=0),this.o2-=s,e.biomass-=s,this.h2o+=s,this.co2+=s,b(this.deadBiomass>=0),b(e.biomass>=0)}{b(e.biomass>=0,`Wrong value ${e.biomass} ${e.speciesId}`);const t=Math.min(1,.01/Math.max(s,1e-4)),i=Math.min(e.biomass*t,e.biomass);b(i>=0),this.deadBiomass+=i,e.biomass-=i,b(e.biomass>=0)}b(e.biomass>=0)}b(this.o2>=0),b(this.co2>=0),b(this.h2o>=0),b(this.deadBiomass>=0),this.pinkElephantCheck()}migrateTo(e){if(0!==this._species.length)for(const t of this._species){const s=.02*t.biomass;s<1||(e.addSpecies(t.speciesId,s),t.biomass-=s)}}diffuseProperty(e,t,s){const i=this[t]*s-e[t]*s;this[t]-=i,e[t]+=i,b(this[t]>=0),b(e[t]>=0)}diffusionTo(e){{const t=this.temperature<216?.001:.1;this.diffuseProperty(e,"co2",t)}{const t=this.temperature<273?.001:.1;this.diffuseProperty(e,"h2o",t)}{const t=.1;this.diffuseProperty(e,"o2",t)}{const t=.1;this.diffuseProperty(e,"heat",t)}}updatePhysicalProperties(){this.temperature=this.heat/1;const e=(e,t)=>1-(1-e)/(t+1),t=this.temperature<216?e(.9,this.co2/1e3):.9,s=this.temperature<273?e(.9,this.h2o/1e3):.9;this.albedo=.75*s*t;let i=`0.75 * ${s.toFixed(2)} [ice] * ${t.toFixed(2)} [dryIce]`;for(const e of this._species){const t=u[e.speciesId],s=(o=t.albedo,n=e.biomass/500,o+(1-o)/(n+1));this.albedo*=s,i+=` * ${s.toFixed(2)} [${e.speciesId}] `}var o,n;this.albedoDebugStr=i,b(this.albedo>=0&&this.albedo<=1),this.heat+=(1-this.albedo)*this.stellarEnergy;this.heatLoss=.01*this.heat,this.heat-=this.heatLoss}updateStats(e){e.co2+=this.co2,e.o2+=this.o2,e.h2o+=this.h2o,e.deadBiomass+=this.deadBiomass,e.albedoSum+=this.albedo,e.temperatureSum+=this.temperature;for(const{speciesId:t,biomass:s}of this._species)t in e.species||(e.species[t]=0),e.species[t]+=s}}class y{constructor(e,t,s=(e=>(t,s)=>new f(t,s,160*s/(e-1)-80))(t)){this.cellFactory=s,this.width=e,this.height=t,this._prepareGrid()}_prepareGrid(){this._data=new Array(this.width*this.height);for(let e=0;e<this.width;++e)for(let t=0;t<this.height;++t)this._data[this._index(e,t)]=this.cellFactory(e,t)}randomCell(){let e=h(this._data.length);return this._data[e]}_index(e,t){return e+t*this.width}get(e,t){return this.inRange(e,t)?this._data[this._index(e,t)]:null}inRange(e,t){return e>=0&&t>=0&&e<this.width&&t<this.height}*eachNode(){for(const e of this._data)e&&(yield e)}*eachNodeCheckered(){b(this._data.length%523!=0);let e=0;for(let t=0;t<this._data.length;++t){e=(e+523)%this._data.length;const t=this._data[e];yield t}}*getAdjacent(e){let t=0,s=-1;const i=e.x,o=e.y;for(const e of[1,2,4,8]){const n=(i+t+this.width)%this.width,a=o+s;if(a>=0&&a<this.height){const t=this._data[this._index(n,a)];yield[e,t]}[t,s]=[-s,t]}}}class x{constructor(){this.reset()}reset(){this.temperature=0,this.co2=0,this.o2=0,this.h2o=0,this.deadBiomass=0,this.species={},this.temperatureSum=0,this.albedoSum=0,this.albedo=0}speciesToString(){return Object.entries(this.species).map(([e,t])=>`${e}: ${t.toFixed(0)}`).join("\n  ")}toString(){return`Average Temperature: ${this.temperature.toFixed(0)} K\nAverage albedo: ${this.albedo.toFixed(2)}\n\nCO2: ${this.co2.toFixed(1)}\nH2O: ${this.h2o.toFixed(1)}\nO2: ${this.o2.toFixed(1)}\nOrganic: ${this.deadBiomass.toFixed(1)}\n\nSpecies: ${this.speciesToString()}`}}let w=0;class k{constructor(){this.id=w++,this.dna="",this.calculateProperties()}calculateProperties(){}}class S{constructor(e,t){this.grid=new y(e,t),this.species={},this.planet=new x,this.init(),this.tickCounter=0}init(){for(let e=0;e<4;++e)this.createSpecies()}createSpecies(){const e=new k;return this.species[e.id]=e,e}tick(){this.updatePhysicalProperties(),this.growAndDie(),this.interact(),this.evolve(),this.migrate(),this.updatePlanet(),this.tickCounter+=1}updatePhysicalProperties(){for(const e of this.grid.eachNode())e.updatePhysicalProperties();for(const e of this.grid.eachNodeCheckered())for(const[,t]of this.grid.getAdjacent(e))e.diffusionTo(t)}growAndDie(){for(const e of this.grid.eachNode())e.growAndDie()}interact(){}evolve(){}migrate(){for(const e of this.grid.eachNodeCheckered())for(const[,t]of this.grid.getAdjacent(e))e.migrateTo(t)}updatePlanet(){this.planet.reset();for(const e of this.grid.eachNode())e.updateStats(this.planet);const e=this.grid.width*this.grid.height;this.planet.temperature=this.planet.temperatureSum/e,this.planet.albedo=this.planet.albedoSum/e}}class M extends o.a.GameObjects.Graphics{constructor(e,t,s){super(e,s),this.grid=t,this.prop=()=>1,this.autoMin=!1,this.fixedMin=0,this.color=16711680,this.update()}setProp(e,t=!1){this.prop=e,this.autoMin=t}minMax(e){let t=1/0,s=-1/0;for(const i of this.grid.eachNode()){const o=e(i);o<t&&(t=o),o>s&&(s=o)}return{min:t,max:s}}update(){function e(e,t,s){const i=s-t;return i?(e-t)/i:0}this.clear();const t=this.prop;let{min:s,max:i}=this.minMax(t);this.autoMin||(s=this.fixedMin);for(const o of this.grid.eachNode()){const n=64*o.x,a=64*o.y,r=e(t(o),s,i);this.fillStyle(this.color,r),this.fillRect(n,a,63,63)}}}class v extends o.a.GameObjects.Graphics{constructor(e,t){super(e,t),this.mx=0,this.my=0,this.visible=!1,this.update()}setCoord(e,t){this.mx=e,this.my=t,this.visible=!0,this.update()}update(){this.clear();const e=64*this.mx,t=64*this.my;this.lineStyle(1,16777215,1),this.strokeRect(e-1,t-1,66,66)}}var T=class extends o.a.Scene{constructor(){super({key:"GameScene"})}init(){this.time.addEvent({delay:500,callback:()=>this.tickAndLog(),loop:!0})}preload(){}create(){console.log("Game.create called"),this.planetMap=this.add.tilemap("planetScape"),this.initSim(this.planetMap),this.logElement=document.getElementsByTagName("exo-detail-window")[0],this.planetElement=document.getElementsByTagName("exo-planet-window")[0],this.speciesElement=document.getElementsByTagName("exo-species-window")[0],this.speciesElement.introduceSpeciesCallback=e=>{this.currentCell&&(this.currentCell.addSpecies(e,10),this.speciesElement.disableSpecies(e,this.sim.tick),setTimeout(()=>this.speciesElement.enableSpecies(e),2e4))},this.gridView=new M(this,this.sim.grid),this.cursor=new v(this);const e=this.planetMap.addTilesetImage("biotope","biotopeTiles");this.backgroundLayer=this.planetMap.createStaticLayer("Tile Layer 1",e),this.add.existing(this.gridView),this.speciesMap=this.add.tilemap("speciesMap");const t=this.speciesMap.addTilesetImage("species","speciesTiles");this.backgroundLayer=this.speciesMap.createDynamicLayer("Tile Layer 1",t),this.add.existing(this.cursor),this.input.on("pointermove",this.onMouseMove,this),this.input.on("pointerup",this.onMouseClick,this),this.input.keyboard.on("keydown",this.onKeyDown,this),this.setFilter(1);var s=this.input.keyboard.createCursorKeys(),i={camera:this.cameras.main,left:s.left,right:s.right,up:s.up,down:s.down,zoomIn:this.input.keyboard.addKey(o.a.Input.Keyboard.KeyCodes.Q),zoomOut:this.input.keyboard.addKey(o.a.Input.Keyboard.KeyCodes.E),acceleration:.06,drag:5e-4,maxSpeed:1};this.controls=new o.a.Cameras.Controls.SmoothedKeyControl(i),this.add.text(0,0,"Exo Keeper",{font:"32px Bangers",fill:"#7744ff"}),this.scale.on("resize",(function(e){var t=e.width,s=e.height;this.cameras.resize(t,s)}),this)}initSim(e){this.sim=new S(e.width,e.height),this.currentCell=this.sim.grid.get(0,0),this.initBiotopes(e)}initBiotopes(e){for(let t=0;t<e.width;++t)for(let s=0;s<e.height;++s){const i=e.getTileAt(t,s).index-1;this.sim.grid.get(t,s).biotope=i}}tickAndLog(){this.sim.tick(),this.gridView.update(),this.logElement.text=this.currentCell.toString(),this.planetElement.text=`Tick: ${this.sim.tickCounter}\n${this.sim.planet}`,this.updateSpeciesMap()}updateSpeciesMap(){for(const e of this.sim.grid.eachNode()){const t=2*e.x+.5,s=2*e.y+.5;let i=.5,o=.5;for(let e=0;e<4;++e)this.speciesMap.removeTileAt(t+i,s+o),[i,o]=[-o,i];for(const{speciesId:n,biomass:a}of e.species.slice(0,4)){if(a<5)continue;const e=u[n].tileIdx;this.speciesMap.putTileAt(e+1,t+i,s+o),[i,o]=[-o,i]}}}update(e,t){this.controls.update(t)}toGridCoords({x:e,y:t}){let s=this.cameras.main.getWorldPoint(e,t);return{mx:Math.floor(s.x/64),my:Math.floor(s.y/64)}}onMouseClick(e){const{mx:t,my:s}=this.toGridCoords(e),i=this.sim.grid.get(t,s);i&&(this.currentCell=i)}onMouseMove(e){const{mx:t,my:s}=this.toGridCoords(e);this.sim.grid.inRange(t,s)&&this.cursor.setCoord(t,s)}onKeyDown(e){switch(e.keyCode){case o.a.Input.Keyboard.KeyCodes.ONE:this.setFilter(1),e.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.TWO:this.setFilter(2),e.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.THREE:this.setFilter(3),e.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.FOUR:this.setFilter(4),e.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.FIVE:this.setFilter(5),e.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.SIX:this.setFilter(6),e.stopPropagation()}}setFilter(e){switch(e){case 1:this.gridView.setProp(e=>e.sumLivingBiomass()),this.gridView.color=8978312;break;case 2:this.gridView.color=65280,this.gridView.setProp(e=>e.co2);break;case 3:this.gridView.color=16746632,this.gridView.setProp(e=>e.o2);break;case 4:this.gridView.color=255,this.gridView.setProp(e=>e.h2o);break;case 5:this.gridView.color=16776960,this.gridView.setProp(e=>e.heat,!0);break;case 6:this.gridView.color=16746496,this.gridView.setProp(e=>e.stellarEnergy)}}};class E extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.selectedSpecies=null,this._introduceSpeciesCallback=()=>{},this.shadowRoot.innerHTML=`\n\t<style>\n\t\t.main {\n\t\t\tposition: relative;\n\t\t\theight: 100%;\n\t\t\tdisplay: grid;\n\t\t\tgrid-template: auto 1fr auto / 1fr;\n\t\t}\n\t\t\t\t\n\t\timg {\n\t\t\talign: center;\n\t\t}\n\t\t\n\t\t#text {\n\t\t\tbackground: white;\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t#speciesButton {\n\t\t\twidth: 200px;\n\t\t\tmargin: 8px;\n\t\t}\n\n\t.palette-container {\n\t\tdisplay: inline-block;\n\t}\n\n\t.palette-span {\n\t\t\n\t\tborder: 3px solid #4CAF50; /* Green */\n\t\tbackground: #777700;\n\t\tdisplay: inline-block;\n\t\tmargin: 8px;\n\t\tpadding: 8px;\n\t\t\n\t\tborder-radius: 6px;\n\t\ttext-decoration: none;\n\t\tfont-size: 16px;\n\t\tbox-sizing: border-box;\n\t\ttransition: 0.1s;\n\t\toverflow: hidden;\n\t\t\n\t\t/* prevent text selection on buttons*/\n\t\t-moz-user-select: none; \n\t\t-webkit-user-select: none; \n\t\t-ms-user-select:none; \n\t\tuser-select:none;\n\t}\n\n\t.palette-container input { \n\t\tdisplay: none; \n\t}\n\n\tinput.species-input:checked + .palette-span {\n\t\tbackground-color: #4CAF50;\n\t\ttransform: translateY(4px);\n\t}\n\n\tinput.species-input:disabled + .palette-span {\n\t\tborder: 3px solid #777777;\n\t\tbackground-color: #444444;\n\t}\n\n\tinput.species-input + .palette-span:hover {\n\t\tbackground-color: #5CBF60; /* Green */\n\t\tcolor: white;\n\t}\n\n\t</style>\n\n\t<div class="main">\n\t\t<div class="buttonBar">\n\n\t\t${u.map((e,t)=>this.createButton(t,e.iconUrl)).join("")}\n\n\t\t</div>\t\n\t\t<div id="text">\n\t\t\tLorem ipsum...\n\t\t</div>\n\t\t<button id="speciesButton">Introduce species</button>\n\t</div>\n`}createButton(e,t){return`<label class="palette-container">\n\t\t\t\t<input \n\t\t\t\t\tid="species_${e}"\n\t\t\t\t\tclass="species-input" \n\t\t\t\t\tname="species-group" \n\t\t\t\t\ttype="radio" \n\t\t\t\t\tvalue="${e}">\n\t\t\t\t\t<span class="palette-span">\n\t\t\t\t\t\t<img src="${t}">\n\t\t\t\t\t</span>\n\t\t\t\t</input>\n\t\t\t</label>`}set introduceSpeciesCallback(e){this._introduceSpeciesCallback=e}connectedCallback(){console.log("connected callback"),this.shadowRoot.querySelectorAll("input").forEach(e=>{e.addEventListener("click",e=>{this.selectedSpecies=e.target.value;const t=u[this.selectedSpecies],s=`${t.backstory}\nalbedo: ${t.albedo}\nTemp range: ${t.temperatureRange[0]}-${t.temperatureRange[1]} K`;this.shadowRoot.getElementById("text").innerText=s})}),this.shadowRoot.querySelector("#speciesButton").addEventListener("click",e=>{console.log("Introduce species"),null!==this.selectedSpecies&&this._introduceSpeciesCallback(this.selectedSpecies)})}enableSpecies(e){this.shadowRoot.getElementById("species_"+e).disabled=!1}disableSpecies(e){const t=this.shadowRoot.getElementById("species_"+e);t.disabled=!0,t.checked=!1,this.selectedSpecies=null}}customElements.define("exo-species-window",E);s(1468),s(1469);const C=()=>.67*window.innerWidth,_=()=>.67*window.innerHeight,I={type:o.a.AUTO,localStorageName:"exokeeper",disableContextMenu:!0,backgroundColor:"#041849",fps:{target:20},scale:{mode:o.a.Scale.NONE,width:C(),height:_(),parent:"content"}},$=Object.assign(I,{scene:[r,c,T]});class P extends o.a.Game{constructor(){super($)}}window.game=new P,window.addEventListener("resize",(function(){window.game.scale.resize(C(),_())}),!1)}});