!function(t){function e(e){for(var i,a,r=e[0],c=e[1],h=e[2],d=0,p=[];d<r.length;d++)a=r[d],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(t[i]=c[i]);for(l&&l(e);p.length;)p.shift()();return n.push.apply(n,h||[]),s()}function s(){for(var t,e=0;e<n.length;e++){for(var s=n[e],i=!0,r=1;r<s.length;r++){var c=s[r];0!==o[c]&&(i=!1)}i&&(n.splice(e--,1),t=a(a.s=s[0]))}return t}var i={},o={0:0},n=[];function a(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=t,a.c=i,a.d=function(t,e,s){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(s,i,function(e){return t[e]}.bind(null,i));return s},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=e,r=r.slice();for(var h=0;h<r.length;h++)e(r[h]);var l=c;n.push([1470,1]),s()}({1468:function(t,e){class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set text(t){this.shadowRoot.innerHTML=`\n\t<style>\n\t\tpre {\n\t\t\toverflow: hidden;\n\t\t}\n\t</style>\n\n\t<pre>${t}</pre>\n`}}customElements.define("exo-planet-window",s)},1469:function(t,e){class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set text(t){this.shadowRoot.innerHTML=`\n\t<style>\n\t\tpre {\n\t\t\toverflow: hidden;\n\t\t}\n\t</style>\n\n\t<pre>${t}</pre>\n`}}customElements.define("exo-detail-window",s)},1470:function(t,e,s){"use strict";s.r(e);var i=s(11),o=s.n(i),n=s(550),a=s.n(n),r=class extends o.a.Scene{constructor(){super({key:"BootScene"})}preload(){this.fontsReady=!1,this.fontsLoaded=this.fontsLoaded.bind(this),this.add.text(100,100,"loading fonts..."),this.load.image("loaderBg","./assets/images/loader-bg.png"),this.load.image("loaderBar","./assets/images/loader-bar.png"),a.a.load({google:{families:["Bangers"]},active:this.fontsLoaded})}update(){this.fontsReady&&this.scene.start("SplashScene")}fontsLoaded(){this.fontsReady=!0}};const c=["ExoMusicIntro","ExoMusicLoop"];class h{constructor(t){this.game=t,this.currentTrack=null,this.musicQ=[],this.tracks={}}init(){for(const t of c)this.tracks[t]=this.game.sound.add(t,1,!0)}play(t,e){if(!1===e&&this.game_music)return console.log("Added to Q: ",t),void this.musicQ.push(t);this.currentTrack!==t&&(this.musicQ=[],this.playImmediate(t))}playImmediate(t){console.log("Starting track: ",t),this.stop(),this.currentTrack=t,this.game_music=this.tracks[t],this.game_music.volume=1,this.game_music.play({loop:!0}),this.game_music.on("looped",()=>this.onLoop())}onLoop(){if(console.log("Loop!!!"),this.musicQ.length>0){let t=this.musicQ.shift();this.playImmediate(t)}}stop(){this.game_music&&(this.game_music.stop(),this.game_music=null)}onMusicVolumeChange(t){this.game_music&&(this.game_music.volume=t/100)}}var l=class extends o.a.Scene{constructor(){super({key:"SplashScene"})}preload(){this.load.image("biotopeTiles","./assets/images/biotope.png"),this.load.tilemapTiledJSON("planetScape","./assets/planetscape.json"),this.load.image("speciesTiles","./assets/images/species.png"),this.load.tilemapTiledJSON("speciesMap","./assets/speciesmap.json");for(const t of c)this.load.audio(t,[`assets/music/${t}.mp3`],!0)}create(){this.game.musicPlayer.init(),this.scene.start("MenuScene")}update(){}};function d(t){return Math.floor(Math.random()*Math.floor(t))}const p=0,m=1,u=2,g=0,b=[{name:"Plant 0",iconUrl:"./assets/images/species/plant0.png",coverArt:"./assets/species_cover_art/platn_intro2.png",tileIdx:12,color:6942894,role:m,interactionMap:{},albedo:.9,temperatureRange:[220,260],backstory:"An ancient and strong unicellular plant, but perhaps not the most effective.\n<br>\nWill do well in the cooler early phase of the game.\n",biotopeTolerances:{0:.1,1:.5,2:.5,3:.5,4:.5,5:1,6:.5,7:.5}},{name:"Plant 1",iconUrl:"./assets/images/species/plant1.png",coverArt:"./assets/species_cover_art/platn_intro1.png",tileIdx:4,color:3706428,role:m,interactionMap:{},albedo:.8,temperatureRange:[230,270],backstory:"Legends say that this plant microbe came from a great scientist. Sounds too funny to be true.\n<br>\nWill do well in the cooler early phase of terraformation.\n",biotopeTolerances:{0:.5,1:.1,2:.5,3:1,4:.5,5:.5,6:.5,7:.5}},{name:"Herbivore 0",iconUrl:"./assets/images/species/herbivore0.png",coverArt:"./assets/species_cover_art/herbivore_intro0.png",tileIdx:11,color:16301008,role:u,interactionMap:{0:g,1:g,7:g,8:g},albedo:.9,temperatureRange:[235,265],backstory:"A sweet but dangerous creature. Arghhh yarr! Watch yourself, be careful!\n<br>\nOne of the hardiest herbivores that will survive in low temperatures. \n",biotopeTolerances:{0:1,1:.5,2:.5,3:.5,4:.5,5:.1,6:.1,7:.5}},{name:"Fungus 1",iconUrl:"./assets/images/species/fungi1.png",coverArt:"./assets/species_cover_art/fungi_intro0.png",tileIdx:13,color:9268835,role:p,interactionMap:{},albedo:.8,temperatureRange:[240,270],backstory:"Recycle useful substances and return them to the circle of life. Sometimes it feels like a radio wave.\n<br>\nYou'll need to introduce a decomposer like this one, otherwise dead organic material will pile up, and stifle the ecosystem.\n",biotopeTolerances:{0:.5,1:.5,2:1,3:.5,4:1,5:.1,6:.1,7:.5}},{name:"Microbe 1",iconUrl:"./assets/images/species/microb1.png",coverArt:"./assets/species_cover_art/microb_intro1.png",tileIdx:1,color:16776960,role:u,interactionMap:{0:g,1:g,7:g,8:g},albedo:.7,temperatureRange:[245,290],backstory:"The cow says Muuuu. This yellow creature does not say anything, it is a microbe. But sometimes...\n<br>\nThis creature is a herbivore that can survive in moderately cold climates.\n",biotopeTolerances:{0:.1,1:1,2:.5,3:.5,4:.5,5:.5,6:.5,7:.5}},{name:"Microbe 2",iconUrl:"./assets/images/species/microb2.png",coverArt:"./assets/species_cover_art/microb_intro5.png",tileIdx:3,color:9215743,role:p,interactionMap:{},albedo:.6,temperatureRange:[250,290],backstory:"\nInspired by space and ready for complexity, the purple mushroom! \n<br>\nA useful decomposer in a moderately cold climate.\n",biotopeTolerances:{0:.5,1:.1,2:.1,3:.9,4:.9,5:.5,6:.5,7:.5}},{name:"Catcrobe 2",iconUrl:"./assets/images/species/catcrobe2.png",coverArt:"./assets/species_cover_art/catcrobe_intro2.png",tileIdx:9,color:12216520,role:u,interactionMap:{2:g,3:g,4:g,5:g,9:g,10:g,11:g},albedo:.6,temperatureRange:[255,300],backstory:"\nThis is a cat? Is it a microbe? This is a catcrobe! Micro meow!\n<br>\nThis microbe will attack and eat other microbes.\n",biotopeTolerances:{0:.5,1:.1,2:.1,3:.5,4:.9,5:.9,6:.5,7:.5}},{name:"Plant 2",iconUrl:"./assets/images/species/microb4.png",coverArt:"./assets/species_cover_art/microb_intro4.png",tileIdx:6,color:1638399,role:m,interactionMap:{},albedo:.6,temperatureRange:[260,290],backstory:"The spiral concentrates the energy of the star and turns it into food for itself. And others.\n<br>\nThis is a photosynthesizing organism, a plant species that can survive in moderately cold climates.\n",biotopeTolerances:{0:.5,1:.1,2:.5,3:.9,4:.5,5:.5,6:.5,7:.5}},{name:"Plant 3",iconUrl:"./assets/images/species/microb5.png",coverArt:"./assets/species_cover_art/microb_intro2.png",tileIdx:7,color:7798531,role:m,interactionMap:{},albedo:.5,temperatureRange:[270,310],backstory:"Rise and Shine, Micro Pumpkin!  Nutritious, but does not help to increase the temperature greatly.\n<br>\nLet this plant species cooperate with other microbes to boost its effect.",biotopeTolerances:{0:.5,1:.5,2:.5,3:.5,4:.1,5:.9,6:.5,7:.5}},{name:"Microbe 3",iconUrl:"./assets/images/species/microb3.png",coverArt:"./assets/species_cover_art/microb_intro7.png",tileIdx:8,color:12312315,role:u,interactionMap:{0:g,1:g,7:g,8:g},albedo:.3,temperatureRange:[270,310],backstory:"As we all know, bats are cool and dangerous. Therefore, even single-celled bats can eat whatever they want.\n<br>\nThis creature is a herbivore for temperate climes.\n",biotopeTolerances:{0:.1,1:.1,2:1,3:.5,4:.5,5:.9,6:.9,7:.5}},{name:"Donut 1",iconUrl:"./assets/images/species/donut1.png",coverArt:"./assets/species_cover_art/donut_intro1.png",tileIdx:5,color:16748288,role:p,interactionMap:{},albedo:.2,temperatureRange:[270,310],backstory:"Circle of life! Or a death donut? This mushroom combines immiscible.\n<br>\nA decomposer in temperate climates.\n",biotopeTolerances:{0:.2,1:.5,2:.5,3:.5,4:.8,5:.5,6:.5,7:.5}},{name:"Angry 1",iconUrl:"./assets/images/species/angry1.png",coverArt:"./assets/species_cover_art/angry_intro1.png",tileIdx:10,color:16727296,role:u,interactionMap:{2:g,3:g,4:g,5:g,6:g,9:g,10:g},albedo:.1,temperatureRange:[280,320],backstory:"DO NOT JOKE WITH THIS MICRO RED TERMINATOR!!!",biotopeTolerances:{0:.1,1:.1,2:.2,3:1,4:.8,5:.9,6:.9,7:.1}}];class f extends Error{constructor(t){super(t)}}function y(t,e){if(!t)throw console.error(e),new f(e)}class x{constructor(t,e,s){this.x=t,this.y=e,this.deadBiomass=0,this.co2=1e3,this.o2=0,this.h2o=1e3,this.latitude=s,this.heat=220,this.stellarEnergy=10*Math.cos(this.latitude/180*3.141),y(this.stellarEnergy>=0),this._species=[]}sumLivingBiomass(){return this._species.reduce((t,e)=>t+e.biomass,0)}get species(){return this._species}addSpecies(t,e){const s=this._species.find(e=>e.speciesId===t);s?(s.biomass+=e,this.sortSpecies()):(this._species.push({speciesId:t,biomass:e}),this.maxSpeciesCheck())}maxSpeciesCheck(){this.sortSpecies(),this._species.length>8&&this.removeLowestSpecies()}removeLowestSpecies(){const t=this._species.pop();this.deadBiomass+=t.biomass}pinkElephantCheck(){if(this.sortSpecies(),0===this._species.length)return;this._species[this._species.length-1].biomass<1&&this.removeLowestSpecies()}sortSpecies(){this._species.sort((t,e)=>e.biomass-t.biomass)}speciesToString(){return this._species.map(t=>`${t.speciesId}: ${t.biomass.toFixed(1)}`).join("\n  ")}toString(){return`[${this.x}, ${this.y}] Biotope: ${this.biotope}\nHeat: ${this.heat.toExponential(2)} GJ/km^2\nTemperature: ${this.temperature.toFixed(0)} K\nHeat gain from sun: ${this.stellarEnergy.toExponential(2)} GJ/km^2/tick\nHeat loss to space: ${this.heatLoss.toExponential(2)} GJ/km^2/tick\nAlbedo: ${this.albedo.toFixed(2)}\n${this.albedoDebugStr}\nLatitude: ${this.latitude.toFixed(0)} deg\n\nCO2: ${this.co2.toFixed(1)}\nH2O: ${this.h2o.toFixed(1)}\nO2: ${this.o2.toFixed(1)}\nOrganic: ${this.deadBiomass.toFixed(1)}\n\nSpecies: ${this.speciesToString()}`}growAndDie(){for(const t of this._species){const e=b[t.speciesId];let s=1;if(y(this.biotope in e.biotopeTolerances),s*=e.biotopeTolerances[this.biotope],(this.temperature<e.temperatureRange[0]||this.temperature>e.temperatureRange[1])&&(s*=.1),y(s>=0&&s<=1),e.role===m){const e=Math.min(this.co2,this.h2o),i=s*this.temperature*this.stellarEnergy*15e-8*e,o=Math.min(t.biomass*i,this.co2,this.h2o);y(o>=0),this.co2-=o,this.h2o-=o,this.o2+=o,t.biomass+=o,y(t.biomass>=0)}else if(e.role===u)for(const i of this._species){if(i.speciesId===t.speciesId)continue;if(e.interactionMap[i.speciesId]===g){const e=.001*s*i.biomass,o=Math.min(t.biomass*e,i.biomass);y(o>=0),i.biomass-=o,t.biomass+=o,y(t.biomass>=0),y(i.biomass>=0)}}else if(e.role===p){const e=.001*s*this.deadBiomass,i=Math.min(t.biomass*e,this.deadBiomass);y(i>=0),this.deadBiomass-=i,t.biomass+=i,y(this.deadBiomass>=0),y(t.biomass>=0)}if(e.role!==m){const e=.001*Math.min(t.biomass,this.o2),s=Math.min(t.biomass,t.biomass*e,this.o2);y(s>=0),this.o2-=s,t.biomass-=s,this.h2o+=s,this.co2+=s,y(this.deadBiomass>=0),y(t.biomass>=0)}{y(t.biomass>=0,`Wrong value ${t.biomass} ${t.speciesId}`);const e=Math.min(1,.01/Math.max(s,1e-4)),i=Math.min(t.biomass*e,t.biomass);y(i>=0),this.deadBiomass+=i,t.biomass-=i,y(t.biomass>=0)}y(t.biomass>=0)}y(this.o2>=0),y(this.co2>=0),y(this.h2o>=0),y(this.deadBiomass>=0),this.pinkElephantCheck()}migrateTo(t){if(0!==this._species.length)for(const e of this._species){const s=.02*e.biomass;s<1||(t.addSpecies(e.speciesId,s),e.biomass-=s)}}diffuseProperty(t,e,s){const i=this[e]*s-t[e]*s;this[e]-=i,t[e]+=i,y(this[e]>=0),y(t[e]>=0)}diffusionTo(t){{const e=this.temperature<216?.001:.1;this.diffuseProperty(t,"co2",e)}{const e=this.temperature<273?.001:.1;this.diffuseProperty(t,"h2o",e)}{const e=.1;this.diffuseProperty(t,"o2",e)}{const e=.1;this.diffuseProperty(t,"heat",e)}}updatePhysicalProperties(){this.temperature=this.heat/1;const t=(t,e)=>1-(1-t)/(e+1),e=this.temperature<216?t(.9,this.co2/1e3):.9,s=this.temperature<273?t(.9,this.h2o/1e3):.9;this.albedo=.75*s*e;let i=`0.75 * ${s.toFixed(2)} [ice] * ${e.toFixed(2)} [dryIce]`;for(const t of this._species){const e=b[t.speciesId],s=(o=e.albedo,n=t.biomass/500,o+(1-o)/(n+1));this.albedo*=s,i+=` * ${s.toFixed(2)} [${t.speciesId}] `}var o,n;this.albedoDebugStr=i,y(this.albedo>=0&&this.albedo<=1),this.heat+=(1-this.albedo)*this.stellarEnergy;this.heatLoss=.01*this.heat,this.heat-=this.heatLoss}updateStats(t){t.co2+=this.co2,t.o2+=this.o2,t.h2o+=this.h2o,t.deadBiomass+=this.deadBiomass,t.albedoSum+=this.albedo,t.temperatureSum+=this.temperature,this.temperature>t.maxTemperature&&(t.maxTemperature=this.temperature),this.temperature<t.minTemperature&&(t.minTemperature=this.temperature);for(const{speciesId:e,biomass:s}of this._species)e in t.species||(t.species[e]=0),t.species[e]+=s}}class w{constructor(t,e,s=(t=>(e,s)=>new x(e,s,160*s/(t-1)-80))(e)){this.cellFactory=s,this.width=t,this.height=e,this._prepareGrid()}_prepareGrid(){this._data=new Array(this.width*this.height);for(let t=0;t<this.width;++t)for(let e=0;e<this.height;++e)this._data[this._index(t,e)]=this.cellFactory(t,e)}randomCell(){let t=d(this._data.length);return this._data[t]}_index(t,e){return t+e*this.width}get(t,e){return this.inRange(t,e)?this._data[this._index(t,e)]:null}inRange(t,e){return t>=0&&e>=0&&t<this.width&&e<this.height}*eachNode(){for(const t of this._data)t&&(yield t)}*eachNodeCheckered(){y(this._data.length%523!=0);let t=0;for(let e=0;e<this._data.length;++e){t=(t+523)%this._data.length;const e=this._data[t];yield e}}*getAdjacent(t){let e=0,s=-1;const i=t.x,o=t.y;for(const t of[1,2,4,8]){const n=(i+e+this.width)%this.width,a=o+s;if(a>=0&&a<this.height){const e=this._data[this._index(n,a)];yield[t,e]}[e,s]=[-s,e]}}}class v{constructor(){this.reset()}reset(){this.temperature=0,this.maxTemperature=0,this.minTemperature=1/0,this.co2=0,this.o2=0,this.h2o=0,this.deadBiomass=0,this.species={},this.temperatureSum=0,this.albedoSum=0,this.albedo=0}speciesToString(){return Object.entries(this.species).map(([t,e])=>`${t}: ${e.toFixed(0)}`).join("\n  ")}toString(){return`Average Temperature: ${this.temperature.toFixed(0)} K\nLowest Temperature: ${this.minTemperature.toFixed(0)} K\nHighest Temperature: ${this.maxTemperature.toFixed(0)} K\n\nAverage albedo: ${this.albedo.toFixed(2)}\n\nCO2: ${this.co2.toFixed(1)}\nH2O: ${this.h2o.toFixed(1)}\nO2: ${this.o2.toFixed(1)}\nOrganic: ${this.deadBiomass.toFixed(1)}\n\nSpecies: ${this.speciesToString()}`}}let k=0;class _{constructor(){this.id=k++,this.dna="",this.calculateProperties()}calculateProperties(){}}class T extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n\t\t<style>\n\t\t\t.Backdrop {\n\t\t\t\tbackground: #666;\n\t\t\t\theight: 100%;\n\t\t\t\tz-index: 1000;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\t.Container {\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\n\t\t\t\tposition: fixed;\n\t\t\t\tbottom: 0px;\n\t\t\t\tz-index: 1001;\n\t\t\t\topacity: 1;\n\t\t\t}\n\n\t\t\t.Dialog {\n\t\t\t\tbackground: #fff;\n\t\t\t\tborder: 1px solid #dedede;\n\n\t\t\t\tfont-family: Helvetica,Tahoma,Arial,sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tline-height: 1.4;\n\n\t\t\t\tmax-width: 80%;\n\t\t\t\tmax-height: 80%;\n\t\t\t}\n\t\t\n\t\t\tdiv {\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t\n\t\t\t.Dialog_Body {\n\t\t\t\toverflow: hidden auto;\n\t\t\t\t-webkit-overflow-scrolling: touch;\n\t\t\t\tcolor: #44484a;\n\t\t\t\tmargin: 10px;\n\t\t\t\tpadding: 20px;\n\t\t\t\tpadding-left: 20px;\n\t\t\t\tmin-height: 64px;\n\t\t\t\tmin-width: 128px;\n\t\t\t}\n\n\t\t\t.Dialog_Buttons {\n\t\t\t\ttext-align: right;\n\t\t\t\tpadding: 10px 5px 10px 10px;\n\t\t\t}\n\n\t\t\t.Dialog_Buttons a:hover {\n\t\t\t\tbackground: #224467;\n\t\t\t\tcolor: #fff;\n\t\t\t}\n\n\t\t\t.Dialog_Buttons a {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tzoom: 1;\n\t\t\t\t*display: inline;\n\t\t\t\tbackground: #516270;\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-weight: 700;\n\t\t\t\tmargin-right: 5px !important;\n\t\t\t\tmin-width: 60px;\n\t\t\t\tpadding: 10px 15px;\n\t\t\t\ttext-align: center;\n\t\t\t\ttext-decoration: none;\n\t\t\t}\n\t\t\t\n\t\t\t.Dialog * {\n\t\t\t\t-moz-box-sizing: content-box !important;\n\t\t\t\t-webkit-box-sizing: content-box !important;\n\t\t\t\tbox-sizing: content-box !important;\n\t\t\t}\n\t\t</style>\n\t\n\t\t<div class="Backdrop" style="position: fixed; left: 0px; top: 0px; opacity: 0.9;"></div>\n\n\t\t<div class="Container">\n\t\t\t<div class="Dialog">\n\t\t\t\t<div class="Dialog_Body">\n\t\t\t\t\t<slot></slot>\n\t\t\t\t</div>\n\t\t\t\t<div class="Dialog_Buttons">\n\t\t\t\t\t<a href="javascript:void(0)" id="Dialog_Button_0">Ok</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t',this.shadowRoot.getElementById("Dialog_Button_0").addEventListener("click",t=>{this.remove()})}}function S(t){const e=document.createElement("exo-dialog");e.innerHTML=t,document.body.appendChild(e)}customElements.define("exo-dialog",T);const M={start:{condition:t=>t.tickCounter>0,message:t=>`<h1>Welcome to Exo Keeper</h1>\n\t\t<p>After a voyage of hundreds of lightyears, you have now arrived. Before you lies the barren surface of Kepler-7311b\n\t\tYour goal is to make the surface suitable for human inhabitation. \n\t\tBut the planet is far too cold. At a breezy ${t.planet.temperature.toFixed(0)} K (Or ${(t.planet.temperature-273).toFixed(0)} C) it's impossible to \n\t\tstep outside without a jacket. Plus, there is no oxygen atmosphere.\n\t\t<p>\n\t\tTo terraform the planet, we must introduce some microbe species to the surface.\n\t\t<p>\n\t\tStudy and choose one of the 12 species below. Click on any location in the map, pick a species, and click 'Introduce species'.\n\t\tNote that after introducing a species, it takes 20 seconds of game-time before another new batch of that species is ready again.`},dead_biomass_increased:{condition:t=>t.planet.deadBiomass>12e4,message:t=>"<h1>Dead biomass build-up</h1>\n\t\t<p>Life on the surface is harsh, and microbes are dying, leaving their dead bodies behind.\n\t\tThey won't decompose, unless you introduce the microbes that do so. Make sure you introduce some decomposers!"},albedo_lowered:{condition:t=>t.tickCounter>10&&t.planet.albedo<.65,message:t=>`<h1>Albedo is lowering</h1>\n\t\t<p>Great job! The albedo of the planet is currently ${t.planet.albedo.toFixed(2)} and lowering.\n\t\tWith a lower albedo, more of the energy from the star Kepler-7311 is being absorbed, warming the surface.\n\t\tBy introducing more species, you can decrease the albedo of the planet even further`},first_ice_melting:{condition:t=>t.planet.maxTemperature>273,message:t=>`<h1>First ice is melting</h1>\n\t\t<p>At the warm equator, the temperature has reached ${t.planet.maxTemperature.toFixed(0)} K (Or ${(t.planet.maxTemperature-273).toFixed(0)} C)\n\t\tThis means that ice starts melting and the planet is getting even more suitable for life.\n\t\tCan you reach an average temperature of 298 K?`},room_temperature_reached:{condition:t=>t.planet.temperature>298,message:t=>`<h1>Temperate climate</h1>\n\t\t<p>The average temperature of your planet now stands at ${t.planet.temperature.toFixed(0)} K (Or ${(t.planet.temperature-273).toFixed(0)} C)\n\t\tThe ice has melted, there is oxygen in the atmosphere, the surface is teeming with life.\n\t\tWell done, you have taken this game as far as it goes!\n\t\t<p>\n\t\tThank you for playing.\n\t\tDid you like it? Let us know at @Gekaremi, @Donall or @mpvaniersel on twitter!`}};class E{constructor(t,e){this.grid=new w(t,e),this.species={},this.planet=new v,this.init(),this.tickCounter=0,this.achievements={}}init(){for(let t=0;t<4;++t)this.createSpecies()}createSpecies(){const t=new _;return this.species[t.id]=t,t}tick(){this.updatePhysicalProperties(),this.growAndDie(),this.interact(),this.evolve(),this.migrate(),this.updatePlanet(),this.tickCounter+=1}updatePhysicalProperties(){for(const t of this.grid.eachNode())t.updatePhysicalProperties();for(const t of this.grid.eachNodeCheckered())for(const[,e]of this.grid.getAdjacent(t))t.diffusionTo(e)}growAndDie(){for(const t of this.grid.eachNode())t.growAndDie()}interact(){}evolve(){}migrate(){for(const t of this.grid.eachNodeCheckered())for(const[,e]of this.grid.getAdjacent(t))t.migrateTo(e)}updatePlanet(){this.planet.reset();for(const t of this.grid.eachNode())t.updateStats(this.planet);const t=this.grid.width*this.grid.height;this.planet.temperature=this.planet.temperatureSum/t,this.planet.albedo=this.planet.albedoSum/t,this.checkAchievements()}checkAchievements(){for(const[t,e]of Object.entries(M))t in this.achievements||e.condition(this)&&(this.achievements[t]=!0,S(e.message(this)))}}class $ extends o.a.GameObjects.Graphics{constructor(t,e,s){super(t,s),this.grid=e,this.prop=()=>1,this.autoMin=!1,this.fixedMin=0,this.color=16711680,this.update()}setProp(t,e=!1){this.prop=t,this.autoMin=e}minMax(t){let e=1/0,s=-1/0;for(const i of this.grid.eachNode()){const o=t(i);o<e&&(e=o),o>s&&(s=o)}return{min:e,max:s}}update(){function t(t,e,s){const i=s-e;return i?(t-e)/i:0}this.clear();const e=this.prop;let{min:s,max:i}=this.minMax(e);this.autoMin||(s=this.fixedMin);for(const o of this.grid.eachNode()){const n=64*o.x,a=64*o.y,r=t(e(o),s,i);this.fillStyle(this.color,r),this.fillRect(n,a,63,63)}}}class C extends o.a.GameObjects.Graphics{constructor(t,e){super(t,e),this.mx=0,this.my=0,this.visible=!1,this.update()}setCoord(t,e){this.mx=t,this.my=e,this.visible=!0,this.update()}update(){this.clear();const t=64*this.mx,e=64*this.my;this.lineStyle(1,16777215,1),this.strokeRect(t-1,e-1,66,66)}}var I=class extends o.a.Scene{constructor(){super({key:"GameScene"})}init(){this.time.addEvent({delay:500,callback:()=>this.tickAndLog(),loop:!0})}preload(){}create(){console.log("Game.create called"),this.planetMap=this.add.tilemap("planetScape"),this.initSim(this.planetMap),this.logElement=document.getElementsByTagName("exo-detail-window")[0],this.planetElement=document.getElementsByTagName("exo-planet-window")[0],this.speciesElement=document.getElementsByTagName("exo-species-window")[0],this.speciesElement.introduceSpeciesCallback=t=>{this.currentCell&&(this.currentCell.addSpecies(t,10),this.speciesElement.disableSpecies(t,this.sim.tick),setTimeout(()=>this.speciesElement.enableSpecies(t),2e4))},this.gridView=new $(this,this.sim.grid),this.cursor=new C(this);const t=this.planetMap.addTilesetImage("biotope","biotopeTiles");this.backgroundLayer=this.planetMap.createStaticLayer("Tile Layer 1",t),this.add.existing(this.gridView),this.speciesMap=this.add.tilemap("speciesMap");const e=this.speciesMap.addTilesetImage("species","speciesTiles");this.backgroundLayer=this.speciesMap.createDynamicLayer("Tile Layer 1",e),this.add.existing(this.cursor),this.input.on("pointermove",this.onMouseMove,this),this.input.on("pointerup",this.onMouseClick,this),this.input.keyboard.on("keydown",this.onKeyDown,this),this.setFilter(1);var s=this.input.keyboard.createCursorKeys(),i={camera:this.cameras.main,left:s.left,right:s.right,up:s.up,down:s.down,zoomIn:this.input.keyboard.addKey(o.a.Input.Keyboard.KeyCodes.Q),zoomOut:this.input.keyboard.addKey(o.a.Input.Keyboard.KeyCodes.E),acceleration:.06,drag:5e-4,maxSpeed:1};this.controls=new o.a.Cameras.Controls.SmoothedKeyControl(i),this.scale.on("resize",(function(t){var e=t.width,s=t.height;this.cameras.resize(e,s)}),this),this.game.musicPlayer.play("ExoMusicIntro",!0),this.game.musicPlayer.play("ExoMusicLoop",!1)}initSim(t){this.sim=new E(t.width,t.height),this.currentCell=this.sim.grid.get(0,0),this.initBiotopes(t)}initBiotopes(t){for(let e=0;e<t.width;++e)for(let s=0;s<t.height;++s){const i=t.getTileAt(e,s).index-1;this.sim.grid.get(e,s).biotope=i}}tickAndLog(){this.sim.tick(),this.gridView.update(),this.logElement.text=this.currentCell.toString(),this.planetElement.text=`Tick: ${this.sim.tickCounter}\n${this.sim.planet}`,this.updateSpeciesMap()}updateSpeciesMap(){for(const t of this.sim.grid.eachNode()){const e=2*t.x+.5,s=2*t.y+.5;let i=.5,o=.5;for(let t=0;t<4;++t)this.speciesMap.removeTileAt(e+i,s+o),[i,o]=[-o,i];for(const{speciesId:n,biomass:a}of t.species.slice(0,4)){if(a<5)continue;const t=b[n].tileIdx;this.speciesMap.putTileAt(t+1,e+i,s+o),[i,o]=[-o,i]}}}update(t,e){this.controls.update(e)}toGridCoords({x:t,y:e}){let s=this.cameras.main.getWorldPoint(t,e);return{mx:Math.floor(s.x/64),my:Math.floor(s.y/64)}}onMouseClick(t){const{mx:e,my:s}=this.toGridCoords(t),i=this.sim.grid.get(e,s);i&&(this.currentCell=i)}onMouseMove(t){const{mx:e,my:s}=this.toGridCoords(t);this.sim.grid.inRange(e,s)&&this.cursor.setCoord(e,s)}onKeyDown(t){switch(t.keyCode){case o.a.Input.Keyboard.KeyCodes.ONE:this.setFilter(1),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.TWO:this.setFilter(2),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.THREE:this.setFilter(3),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.FOUR:this.setFilter(4),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.FIVE:this.setFilter(5),t.stopPropagation();break;case o.a.Input.Keyboard.KeyCodes.SIX:this.setFilter(6),t.stopPropagation()}}setFilter(t){switch(t){case 1:this.gridView.setProp(t=>t.sumLivingBiomass()),this.gridView.color=8978312;break;case 2:this.gridView.color=65280,this.gridView.setProp(t=>t.co2);break;case 3:this.gridView.color=16746632,this.gridView.setProp(t=>t.o2);break;case 4:this.gridView.color=255,this.gridView.setProp(t=>t.h2o);break;case 5:this.gridView.color=16776960,this.gridView.setProp(t=>t.heat,!0);break;case 6:this.gridView.color=16746496,this.gridView.setProp(t=>t.stellarEnergy)}}},B=class extends o.a.Scene{constructor(){super({key:"MenuScene"})}create(){this.ready=!1,document.getElementById("credits_button").addEventListener("click",()=>{S('\n\t\t\t<h1>Exo Keeper</h1>\n\t\t\t<p>\n\t\t\tExo Keeper is a game about surviving and thriving on an exo-planet.\n\t\t\t<p>\n\t\t\tExo Keeper was made in just 72hours for the <a href="https://ldjam.com/events/ludum-dare/46/">Ludum Dare 46</a> Game Jam. The theme of LD46 was:\n\t\t\t<blockquote>\n\t\t\t<b>Keep it alive</b>\n\t\t\t</blockquote>\n\t\t\t<p>Authors:</p>\n\t\t\t<dl>\n\t\t\t<dd><a href="https://twitter.com/mpvaniersel">Amarillion</a> (Code)\n\t\t\t<dd><a href="https://github.com/gekaremi">Gekaremi</a> (Design)\n\t\t\t<dd><a href="https://www.instagram.com/l_p_kongroo">Tatiana Kondratieva</a> (Art)\n\t\t\t<dd><a href="http://www.dodonoghue.com/">Dónall O\'Donoghue</a> (Music)\n\t\t\t</dl>\n\t\t\t')}),document.getElementById("start_game_button").addEventListener("click",()=>{document.getElementById("menu").style.display="none",document.getElementById("wrapper").style.display="block",this.scene.start("GameScene")})}};const A={0:"./assets/images/biotope/sorry_sulfuric2.png",1:"./assets/images/biotope/mountain3.png",2:"./assets/images/biotope/sulfur4.png",3:"./assets/images/biotope/lava1.png",4:"./assets/images/biotope/canyon1.png",5:"./assets/images/biotope/lowland0.png",6:"./assets/images/biotope/salt4.png",7:"./assets/images/biotope/canyon2.png"};class L extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.selectedSpecies=null,this._introduceSpeciesCallback=()=>{},this.shadowRoot.innerHTML=`\n\t<style>\n\t\t.main {\n\t\t\tposition: relative;\n\t\t\theight: 100%;\n\t\t\tdisplay: grid;\n\t\t\tgrid-template: auto 1fr auto / 1fr;\n\t\t}\n\t\t\t\t\n\t\timg {\n\t\t\talign: center;\n\t\t}\n\t\t\n\t\t#text {\n\t\t\tbackground: white;\n\t\t\tmargin: 10px;\n\t\t\toverflow: auto;\n\t\t}\n\n\t\tbutton {\n\t\t\twidth: 200px;\n\t\t\tmargin: 8px;\n\t\t}\n\n\t.palette-container {\n\t\tdisplay: inline-block;\n\t}\n\n\t.palette-span {\n\t\t\n\t\tborder: 3px solid #4CAF50; /* Green */\n\t\tbackground: #777700;\n\t\tdisplay: inline-block;\n\t\tmargin: 8px;\n\t\tpadding: 8px;\n\t\t\n\t\tborder-radius: 6px;\n\t\ttext-decoration: none;\n\t\tfont-size: 16px;\n\t\tbox-sizing: border-box;\n\t\ttransition: 0.1s;\n\t\toverflow: hidden;\n\t\t\n\t\t/* prevent text selection on buttons*/\n\t\t-moz-user-select: none; \n\t\t-webkit-user-select: none; \n\t\t-ms-user-select:none; \n\t\tuser-select:none;\n\t}\n\n\t.palette-container input { \n\t\tdisplay: none; \n\t}\n\n\tinput.species-input:checked + .palette-span {\n\t\tbackground-color: #4CAF50;\n\t\ttransform: translateY(4px);\n\t}\n\n\tinput.species-input:disabled + .palette-span {\n\t\tborder: 3px solid #777777;\n\t\tbackground-color: #444444;\n\t}\n\n\tinput.species-input + .palette-span:hover {\n\t\tbackground-color: #5CBF60; /* Green */\n\t\tcolor: white;\n\t}\n\n\t</style>\n\n\t<div class="main">\n\t\t<div class="buttonBar">\n\n\t\t${b.map((t,e)=>this.createButton(e,t.iconUrl)).join("")}\n\n\t\t</div>\t\n\t\t<div id="text">\n\t\t</div>\n\t\t<div>\n\t\t\t<button id="speciesButton">Introduce species</button>\n\t\t\t<button id="infoButton">Info...</button>\n\t\t</div>\n\t</div>\n`}createButton(t,e){return`<label class="palette-container">\n\t\t\t\t<input \n\t\t\t\t\tid="species_${t}"\n\t\t\t\t\tclass="species-input" \n\t\t\t\t\tname="species-group" \n\t\t\t\t\ttype="radio" \n\t\t\t\t\tvalue="${t}">\n\t\t\t\t\t<span class="palette-span">\n\t\t\t\t\t\t<img src="${e}">\n\t\t\t\t\t</span>\n\t\t\t\t</input>\n\t\t\t</label>`}set introduceSpeciesCallback(t){this._introduceSpeciesCallback=t}connectedCallback(){this.shadowRoot.querySelectorAll("input").forEach(t=>{t.addEventListener("click",t=>{this.selectedSpecies=t.target.value;const e=b[this.selectedSpecies],s=`<dl>\n\t\t\t\t<dd>albedo: ${e.albedo}\n\t\t\t\t<dd>Temp range: ${e.temperatureRange[0]}-${e.temperatureRange[1]} K\n\t\t\t\t<dd>Likes: ${Object.entries(e.biotopeTolerances).filter(([t,e])=>e>.5).map(([t,e])=>`<img src="${A[t]}">`).join("")}\n\t\t\t\t<dd>Dislikes: ${Object.entries(e.biotopeTolerances).filter(([t,e])=>e<.5).map(([t,e])=>`<img src="${A[t]}">`).join("")}\n\t\t\t\t</dl>`;this.shadowRoot.getElementById("text").innerHTML=s})}),this.shadowRoot.querySelector("#speciesButton").addEventListener("click",t=>{console.log("Introduce species"),null!==this.selectedSpecies&&this._introduceSpeciesCallback(this.selectedSpecies)}),this.shadowRoot.querySelector("#infoButton").addEventListener("click",t=>{if(null!==this.selectedSpecies){const t=b[this.selectedSpecies];S(`<h1>Species Information</h1>\n\t\t\t\t<img src="${t.coverArt}" style="width: 50%; float: left;\tpadding: 10px;">\n\t\t\t\t<p>\n\t\t\t\t${t.backstory}\n\t\t\t\t</p>\n\t\t\t\t<dl>\n\t\t\t\t<dd>albedo: ${t.albedo}\n\t\t\t\t<dd>Temp range: ${t.temperatureRange[0]}-${t.temperatureRange[1]} K\n\t\t\t\t<dd>Likes: ${Object.entries(t.biotopeTolerances).filter(([t,e])=>e>.5).map(([t,e])=>`<img src="${A[t]}">`).join("")}\n\t\t\t\t<dd>Dislikes: ${Object.entries(t.biotopeTolerances).filter(([t,e])=>e<.5).map(([t,e])=>`<img src="${A[t]}">`).join("")}\n\t\t\t\t</dl>\n\t\t\t\t`)}})}enableSpecies(t){this.shadowRoot.getElementById("species_"+t).disabled=!1}disableSpecies(t){const e=this.shadowRoot.getElementById("species_"+t);e.disabled=!0,e.checked=!1,this.selectedSpecies=null}}customElements.define("exo-species-window",L);s(1468),s(1469);const O=()=>.67*window.innerWidth,P=()=>.67*window.innerHeight,R={type:o.a.AUTO,localStorageName:"exokeeper",disableContextMenu:!0,backgroundColor:"#041849",fps:{target:20},scale:{mode:o.a.Scale.NONE,width:O(),height:P(),parent:"content"}},F=Object.assign(R,{scene:[r,l,I,B]});class K extends o.a.Game{constructor(){super(F),this.musicPlayer=new h(this)}}window.game=new K,window.addEventListener("resize",(function(){window.game.scale.resize(O(),P())}),!1)}});